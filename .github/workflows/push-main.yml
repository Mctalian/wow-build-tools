name: Semantic Release
on:
  push:
    branches: [main, initial]

permissions: {}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache-dependency-path: |
            go.sum

      - name: Go cache paths
        id: go-cache-paths
        run: |
          echo "go-build=$(go env GOCACHE)" >> $GITHUB_OUTPUT
          echo "go-mod=$(go env GOMODCACHE)" >> $GITHUB_OUTPUT

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Install Go dependencies
        run: go mod download

      # - name: Run tests
      #   run: |
      #     go install github.com/vakenbolt/go-test-report@v0.9.3
      #     mkdir -p $RUNNER_TEMP/.coverage
      #     mkdir -p $RUNNER_TEMP/.test-results
      #     go test -json ./... -cover -coverpkg=./... -coverprofile="$RUNNER_TEMP/.coverage/.cover.out" | go-test-report -o $RUNNER_TEMP/.test-results/report.html -g 8
      #     go tool cover -html="$RUNNER_TEMP/.coverage/cover.out" -o "$RUNNER_TEMP/.coverage/report.html"

      # - name: Upload test results
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: test-results
      #     path: $RUNNER_TEMP/.test-results

      # - name: Upload coverage
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: coverage
      #     path: $RUNNER_TEMP/.coverage

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Install dependencies
        run: npm install

      - name: Run semantic-release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: npx semantic-release
